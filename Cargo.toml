[package]
name = "bevy-starter"
version = "0.1.0"
edition = "2024"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
bevy = "0.16.0"
avian2d = "0.3.0"
rand = "0.9.1"

# Improve Runtime Performance
# https://bevyengine.org/learn/quick-start/getting-started/setup/#improve-runtime-performance-optional
log = { version = "*", features = ["max_level_debug", "release_max_level_warn"] }

# Compile low-severity logs out of web builds for performance.
# https://github.com/trubusoft/bevy-starter-alt/blob/6f5430d0cec49a9d31614c8f93b85bcb82474fcb/Cargo.toml#L13
tracing = { version = "0.1", features = ["max_level_debug", "release_max_level_warn"] }


# List of default features that will always be included on build
# This is usefull for development iteartion (as to not adding -F dynamic_linking for every run)
# On target build, add a --no-default-features to exclude all the default features
[features]
default = [
    "native_development",
]
development = [
    "bevy/bevy_dev_tools",
    "bevy/bevy_ui_debug",
]
native_development = [
    "development",
    "bevy/file_watcher", # Enable asset hot reloading
    "bevy/embedded_watcher", # Enable embedded asset hot reloading
]

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to https://github.com/bevyengine/bevy/issues/14291
[profile.dev.package.wgpu-types]
debug-assertions = false


# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"


# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"
